library(pliman)
set_wd_here("img")
monitor <- image_import("monitortrator.jpeg", plot = TRUE)
pegar_circulo <- image_dimension(monitor)
monitor <- image_segment_mask(monitor, shape = "disc",size = pegar_circulo[[2]])
indexes <- c("R,G,R+G,(R+G)-R")
pegar_dpi = 0.375
#Monitor Verde
monitorVerdeMacro <- analyze_objects(monitor,index = "R",invert = FALSE)
medidas_Verde <- get_measures(monitorVerdeMacro, dpi = pegar_dpi)
plot_measures(monitorVerdeMacro,measure = "id", col = "BLACK",size = 0.5)
#Monitor Vermelho
monitorVermelhoMacro <- analyze_objects(monitor,index = "G",invert = FALSE)
medidas_Vermelho <- get_measures(monitorAmareloMacro, dpi = pegar_dpi)
#Monitor amarelo (ARRUMAR AS CONTAGENS DE FORA)
monitorAmareloMacro <- analyze_objects(monitor,index = "R+G",invert = TRUE)
medidas_Amarelo <- get_measures(monitorAmareloMacro, dpi = pegar_dpi)
plot_measures(monitorAmareloMacro,measure = "id", col = "BLACK",size = 0.5)
#Monitor Vermelho
monitorVermelhoMacro <- analyze_objects(monitor,index = "G",invert = FALSE)
medidas_Vermelho <- get_measures(monitorAmareloMacro, dpi = pegar_dpi)
plot_measures(monitorVermelhoMacro,measure = "id", col = "BLACK",size = 0.5)
set_pliman_viewer("mapview")
plot(monitor)
res <- analyze_objects(monitor,
watershed = FALSE,
object_index = "R",
pixel_level_index = TRUE)
imagem_palheta <- image_import(img = "palheta.jpeg", plot = TRUE)
men70 <- image_crop(imagem_palheta)
entre7080 <- image_crop(imagem_palheta)
entre8090 <- image_crop(imagem_palheta)
entre90100 <- image_crop(imagem_palheta)
entre100110 <- image_crop(imagem_palheta)
entre110120 <- image_crop(imagem_palheta)
entre120130 <- image_crop(imagem_palheta)
maior130 <- image_crop(imagem_palheta)
image_to_mat(men70)
men70 <- image_to_mat(men70)
View(men70)
plot(men70)
plot(men70)
plot(entre7080)
plot(entre7080)
plot(entre8090)
library(tidyverse)
men70 <- image_crop(imagem_palheta) %>% muta
men70 <- image_crop(imagem_palheta) %>% mutate(classe = "70")
entre7080 <- image_crop(imagem_palheta) %>% mutate(classe = "7080")
entre7080 <- image_crop(imagem_palheta) %>% mutate(classe = "7080")
entre100110
men70 <- image_to_mat(men70) %>% mutate(classe = "70")
men70 <- image_crop(imagem_palheta)
entre7080 <- image_crop(imagem_palheta)
entre8090 <- image_crop(imagem_palheta)
entre90100 <- image_crop(imagem_palheta)
entre100110 <- image_crop(imagem_palheta)
entre110120 <- image_crop(imagem_palheta)
entre120130 <- image_crop(imagem_palheta)
maior130 <- image_crop(imagem_palheta)
men70 <- image_to_mat(men70) %>% mutate(classe = "70")
entre7080 <- image_to_mat(entre7080) %>% mutate(classe = "7080")
entre8090 <- image_to_mat(entre8090) %>% mutate(classe = "8090")
entre90100 <- image_to_mat(entre90100) %>% mutate(classe = "90100")
entre100110 <- image_to_mat(entre100110) %>% mutate(classe = "100110")
entre110120 <- image_to_mat(entre110120) %>% mutate(classe = "110120")
entre120130 <- image_to_mat(entre120130) %>% mutate(classe = "120130")
maior130 <- image_to_mat(maior130) %>% mutate(classe = "130")
View(entre100110)
View(entre100110)
View(entre8090)
dfbind <- bind_rows(men70, entre7080,entre8090,entre90100,entre100110,entre110120,entre120130,maior130)
View(dfbind)
library(carete)
install.packages("caret")
library(caret)
dfbind <-
bind_rows(men70, entre7080,entre8090,entre90100,entre100110,entre110120,entre120130,maior130) %>%
rename(R = B1, G = B2, B = B3)
mod <- train(
classe ~ R + G + B,
data = dfbind
)
trcont <- trainControl(
method = "cv",
p = 0.7,
number = 10
)
library(caret)
train
mod <- train(
classe ~ R + G + B,
data = dfbind,
trControl = trcont
)
mod <- train(
method = "rf",
ntree = 100,
classe ~ R + G + B,
data = dfbind,
trControl = trcont
)
mod <- train(
classe ~ R + G + B,
method = "rf",
ntree = 100,
data = dfbind,
trControl = trcont
)
View(dfbind)
dfbind <-
bind_rows(men70, entre7080,entre8090,entre90100,entre100110,entre110120,entre120130,maior130) %>%
rename(R = B1, G = B2, B = B3) %>%
mutate(class = as.factor(class))
dfbind <-
bind_rows(men70, entre7080,entre8090,entre90100,entre100110,entre110120,entre120130,maior130) %>%
rename(R = B1, G = B2, B = B3)
View(dfbind)
unique(dfbind$classe)
dfbind <-
bind_rows(men70, entre7080,entre8090,entre90100,entre100110,entre110120,entre120130,maior130) %>%
rename(R = B1, G = B2, B = B3) %>%
mutate(class = as.factor(class))
as.factor(dfbind$class)
df$class <- as.factor(dfbind$class)
dfbind$class <- as.factor(dfbind$class)
dfbind <-
bind_rows(men70, entre7080,entre8090,entre90100,entre100110,entre110120,entre120130,maior130) %>%
rename(R = B1, G = B2, B = B3) %>%
mutate(classe = as.factor(classe))
mod <- train(
classe ~ R + G + B,
method = "rf",
ntree = 100,
data = dfbind,
trControl = trcont
)
mod
mod <- train(
classe ~ R + G + B,
method = "rf",
ntree = 100,
tuneGrid = expand.grid(.mtry = 5),
data = dfbind,
trControl = trcont
)
View(dfbind)
View(dfbind)
View(mod)
View(res)
predito <- predict(mod, newdata = res$object_rgb)
predito <- predict(mod, newdata = res$object_rgb)
# pixels do pivo
pix <- res$object_rgb
# pixels do pivo
pix <-
res$object_rgb %>%
mutate(classe = predict(mod, newdata = res$object_rgb))
res$object_rgb
# pixels do pivo
pix <- res$object_rgb
pix$classe <- predict(mod, newdata = res$object_rgb)
View(pix)
# calcular o NR de pixeis de cada classe
pix %>%
select(2:4, classe)
# calcular o NR de pixeis de cada classe
result <-
pix %>%
select(2:4, classe) %>%
group_by(classe) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(prop = n / sum(n))
View(result)
sum(result$n)
View(pix)
829*799
plot(monitor)
# calcular o NR de pixeis de cada classe
result <-
pix %>%
select(2:4, classe) %>%
group_by(classe) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(prop = n / sum(n))
View(result)
View(pix)
result <-
pix %>%
select(2:4, classe) %>%
group_by(classe) %>%
summarise(n = n()) %>%
ungroup()
View(result)
# calcular o NR de pixeis de cada classe
result <-
pix %>%
select(2:4, classe) %>%
group_by(classe) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(prop = n / sum(n),
mediclasse = c(105, 115, 125, 130, 70, 75, 85, 9))
View(result)
# calcular o NR de pixeis de cada classe
result <-
pix %>%
select(2:4, classe) %>%
group_by(classe) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(prop = n / sum(n),
mediclasse = c(105, 115, 125, 130, 70, 75, 85, 95))
# calcular o NR de pixeis de cada classe
result <-
pix %>%
select(2:4, classe) %>%
group_by(classe) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(prop = n / sum(n),
mediclasse = c(105, 115, 125, 130, 70, 75, 85, 95),
prodest = prop * mediclasse)
sum(result$prodest)
# pixels do pivo
pix <- res$object_rgb
# pixels do pivo
pix <-
res$object_rgb %>%
select(2:4)
View(pix)
# pixels do pivo
pix <-
res$object_rgb %>%
select(2:4) %>%
mutate(classe = predict(mod))
# pixels do pivo
pix <-
res$object_rgb %>%
select(2:4) %>%
mutate(classe = predict(mod, newdata = .))
# pixels do pivo
pix <-
res$object_rgb %>%
select(2:4) %>%
mutate(classe = predict(mod, newdata = .)) %>%
group_by(classe) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(prop = n / sum(n),
mediclasse = c(105, 115, 125, 130, 70, 75, 85, 95),
prodest = prop * mediclasse)
sum(result$prodest)
library(rio)
install.packages("rio")
library(rio)
export(pix, "resultado_pivo.xlsx")
open_wd()
par(mfrow = c(1, 2))
plot(monitor)
plot(monitor)
plot(monitor)
image_combine(monitor, monitor)
image_combine(monitor, monitor,
ncol = 1)
